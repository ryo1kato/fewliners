#!/bin/bash
print_help () {
cat <<EOF
Usage: cal [MONTH]
  cal(1) wrapper with smarter month and year detection
  When there's only 1 argument, interpret it as closest month.
  symboric names like 'jan', 'feb' are also be understood.

  If there's more than one parameters, just call the original
  cal(1) command as-is.
EOF
}

set -ue

cal_orig () {
    /usr/bin/cal "$@"
}

cal_month_smart_by_name () {
case $1 in
    jan*) cal_month_smart 1;;
    feb*) cal_month_smart 2;;
    mar*) cal_month_smart 3;;
    apr*) cal_month_smart 4;;
    may)  cal_month_smart 5;;
    jun*) cal_month_smart 6;;
    jul*) cal_month_smart 7;;
    aug*) cal_month_smart 8;;
    sep*) cal_month_smart 9;;
    oct*) cal_month_smart 10;;
    nov*) cal_month_smart 11;;
    dec*) cal_month_smart 12;;
esac
}

cal_month_smart () {
    thisyear=$(date +%Y)
    thismonth=$(date +%m)
    month=$1

    diff=$((month - thismonth))

    if (( 9 > diff && diff >= -3 ))
    then
        year=$thisyear
    elif (( diff >= 9 || diff < -3 ))
    then
        year=$(( thisyear + 1 ))
    else
        year=$(( thisyear - 1 ))
    fi

    cal_orig $month $year
}

if [ $# -eq 0 ]
then
    cal_orig
elif [ $# -eq 1 ]
then
    case $1 in
        [0-9]|[0][0-9]|1[012])
            cal_month_smart $1
            ;;
        jan*|feb*|mar*|apr*|may|jun*|jul*|aug*|sep*|oct*|nov*|dec*)
            cal_month_smart_by_name $1;;
        -h|--help)
            print_help
            exit 0
            ;;
        *)
            cal_orig "$@";;
    esac
else
    cal_orig "$@"
fi
